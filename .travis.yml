language: cpp

sudo: required
dist: bionic

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - linux-libc-dev
            - git
            - build-essential
            - automake
            - libtool
            - python3.8-dev
            - zlib1g-dev
            - gettext
            - swig
            - libgstreamer1.0-dev
            - libgstreamer-plugins-base1.0-dev
            - libfreetype6-dev
            - libsigc++-2.0-dev
            - libfribidi-dev
            - libssl-dev
            - libavahi-client-dev
            - libjpeg-turbo8-dev
            - libgif-dev
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && PYTHON=3.8"
      before_install:
        - pyenv global 3.8
        - pip3 install --upgrade pip tox six
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - linux-libc-dev
            - git
            - build-essential
            - automake
            - libtool
            - python-dev
            - zlib1g-dev
            - gettext
            - swig
            - libgstreamer1.0-dev
            - libgstreamer-plugins-base1.0-dev
            - libfreetype6-dev
            - libsigc++-2.0-dev
            - libfribidi-dev
            - libssl-dev
            - libavahi-client-dev
            - libjpeg-turbo8-dev
            - libgif-dev
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
            - linux-libc-dev
            - git
            - build-essential
            - automake
            - libtool
            - python3.8-dev
            - zlib1g-dev
            - gettext
            - swig
            - libgstreamer1.0-dev
            - libgstreamer-plugins-base1.0-dev
            - libfreetype6-dev
            - libsigc++-2.0-dev
            - libfribidi-dev
            - libssl-dev
            - libavahi-client-dev
            - libjpeg-turbo8-dev
            - libgif-dev
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10 && PYTHON=3.8"
      before_install:
        - pyenv global 3.8
        - pip3 install --upgrade pip tox six
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
            - linux-libc-dev
            - git
            - build-essential
            - automake
            - libtool
            - python-dev
            - zlib1g-dev
            - gettext
            - swig
            - libgstreamer1.0-dev
            - libgstreamer-plugins-base1.0-dev
            - libfreetype6-dev
            - libsigc++-2.0-dev
            - libfribidi-dev
            - libssl-dev
            - libavahi-client-dev
            - libjpeg-turbo8-dev
            - libgif-dev
      env:
        - MATRIX_EVAL="CC=gcc-10 && CXX=g++-10"
git:
  depth: 10

before_install:
  - pip install --upgrade pip tox six
  - eval "${MATRIX_EVAL}"
  - curl -L https://people.freedesktop.org/~slomo/gstreamer.tar.gz | tar xz
  - sed -i "s;prefix=/root/gstreamer;prefix=$PWD/gstreamer;g" $PWD/gstreamer/lib/x86_64-linux-gnu/pkgconfig/*.pc
  - export PKG_CONFIG_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu/pkgconfig
  - export GST_PLUGIN_SYSTEM_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu/gstreamer-1.0
  - export GST_PLUGIN_SCANNER=$PWD/gstreamer/libexec/gstreamer-1.0/gst-plugin-scanner
  - export PATH=$PATH:$PWD/gstreamer/bin
  - export LD_LIBRARY_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH

script:
- echo installing libdvbsi++
- pushd .
- cd /tmp
- git clone --depth 1 git://git.opendreambox.org/git/obi/libdvbsi++.git
- cd libdvbsi++
- autoreconf -i
- ./configure
- make
- sudo make install
- popd
- echo installing tuxbox
- pushd .
- cd /tmp
- git clone --depth 1 https://github.com/OpenPLi/tuxtxt.git
- cd tuxtxt/libtuxtxt
- autoreconf -i
- ./configure --with-boxtype=generic DVB_API_VERSION=5
- make
- sudo make install
- cd ../tuxtxt
- autoreconf -i
- ./configure --with-boxtype=generic DVB_API_VERSION=5
- make
- sudo make install
- popd
- echo compiling enigma2
- autoreconf -i
- ./configure --with-libsdl=no --with-boxtype=nobox --enable-dependency-tracking ac_cv_prog_c_openmp=-fopenmp --with-gstversion=1.0 --with-textlcd
- make
- python -m compileall .
- echo done!

